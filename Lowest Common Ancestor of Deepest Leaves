class Solution {
public:
    TreeNode* lcaDeepestLeaves(TreeNode* root) {
    return dfs(root).first;  
    }
private:
    pair<TreeNode*, int> dfs(TreeNode* root)
    {
        if(root==NULL) return {nullptr,0};
        auto left=dfs(root->left);
        auto right=dfs(root->right);
        if(left.second==right.second)
        return {root, left.second+1};
        if(left.second>right.second)
        return {left.first, left.second+1};
        else
        {
            return {right.first, right.second+1};//+1 for node
        }
    }
};
